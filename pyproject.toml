[tool.poetry]
name = "news-aggregator-backend"
version = "0.1.0"
description = "360Â° nieuwsaggregator backend tooling"
authors = ["News Aggregator Team <dev@news360.local>"]
readme = "README.md"
packages = [
  { include = "backend" }
]
license = "Proprietary"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "0.109.2"
uvicorn = { version = "0.27.1", extras = ["standard"] }
apscheduler = "3.10.4"
sqlalchemy = "2.0.30"
alembic = "1.13.1"
hnswlib = "0.7.0"
# sentence-transformers = "2.7.0"  # Already managed in requirements.txt during MVP bootstrap
# torch = "2.5.1"  # Optional GPU acceleration; install manually when needed
# spacy = "3.7.4"  # Installed via requirements.txt to keep poetry sync optional
"scikit-learn" = "1.5.1"
trafilatura = "1.9.0"
httpx = "0.27.0"
requests = "2.32.3"
python-dotenv = "1.0.1"
pydantic = "2.7.2"
pydantic-settings = "2.3.1"
structlog = "24.1.0"
tenacity = "8.3.0"
loguru = "0.7.2"

[tool.poetry.group.dev.dependencies]
pytest = "8.3.3"
pytest-asyncio = "0.23.7"
pytest-cov = "5.0.0"
ruff = "0.5.5"
black = "24.4.2"
mypy = "1.10.0"
types-requests = "2.32.0.20240712"

[tool.black]
line-length = 100
target-version = ["py312"]
include = "\\.pyi?$"
exclude = """
(
  /migrations
  |/__pycache__
  |/.venv
  |/.mypy_cache
)
"""

[tool.ruff]
line-length = 100
src = ["backend"]
select = ["E", "F", "I", "B", "UP", "N", "S", "ASYNC"]
ignore = ["E203"]

[tool.ruff.lint.isort]
known-first-party = ["backend"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = [
  "backend/tests/unit",
  "backend/tests/integration"
]
addopts = "-ra --strict-markers"
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
strict_optional = true
namespace_packages = true
mypy_path = "backend"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"
